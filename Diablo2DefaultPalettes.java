 package orioni.sixdice;
 import java.awt.image.IndexColorModel;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.Map;
 import orioni.jz.awt.image.ImageUtilities;
 import orioni.jz.awt.image.PaletteDataInterpretation;
 import orioni.jz.awt.image.RestrictableIndexColorModel;
 public class Diablo2DefaultPalettes
 {
   public static final Map<String, RestrictableIndexColorModel> PALETTE_MAP;
   private static final void performMapCreate1(Map<String, RestrictableIndexColorModel> paramMap) {
     paramMap.put("Act 1", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 4, 4, 8, 0, 4, 16, 4, 8, 24, 8, 16, 24, 16, 20, 28, 4, 12, 36, 12, 24, 32, 20, 24, 32, 8, 16, 44, 16, 28, 36, 12, 32, 40, 4, 8, 56, 16, 28, 48, 20, 40, 48, 12, 20, 64, 16, 40, 56, 4, 12, 72, 28, 40, 56, 12, 32, 76, 20, 44, 68, 32, 44, 64, 8, 16, 88, 32, 52, 72, 40, 52, 68, 28, 40, 84, 20, 28, 92, 8, 36, 92, 24, 56, 84, 36, 56, 84, 16, 24, 108, 16, 44, 104, 36, 68, 92, 24, 36, 112, 36, 60, 104, 12, 44, 124, 44, 76, 100, 8, 72, 112, 24, 40, Byte.MIN_VALUE, 40, 80, 116, 36, 48, -120, 64, 80, 108, 12, 52, -116, 104, 32, 112, 68, 88, 120, 64, 64, -116, 48, 92, -124, 36, 52, -100, 24, 40, -92, 20, 72, -92, 64, 100, -116, 56, 112, -116, 80, 104, -116, 52, 68, -80, 32, 76, -76, 88, 112, -104, 64, 120, -96, 28, 96, -68, 72, -124, -100, 84, 84, -60, 32, 108, -56, 88, 124, -84, 72, -120, -80, 84, 124, -56, 32, 112, -32, 84, -100, -72, 0, 44, -4, 112, -116, -64, 80, -104, -52, 48, -124, -28, 112, 112, -32, 120, -104, -48, 60, -120, -8, 56, -96, -20, 100, -72, -40, -124, -92, -32, 68, -76, -16, 76, -64, -12, -116, -80, -16, 92, -44, -4, -80, -80, -4, 16, 36, 4, 24, 36, 20, 24, 60, 32, 12, 72, 24, 48, 68, 0, 8, 100, 24, 36, 92, 36, 36, 92, 56, 68, 108, 8, 20, 124, 40, 52, 116, 64, 48, 120, 88, 28, -100, 52, 56, -124, 112, 52, -96, 72, 76, -112, 88, 40, -68, 68, 72, -104, -124, 76, -72, 96, 0, -4, 24, 92, -36, 116, 124, -48, -116, -120, -4, -96, 40, 12, 12, 72, 24, 24, 88, 0, 0, 68, 20, 56, 104, 36, 16, 100, 60, 40, 120, 40, 40, Byte.MIN_VALUE, 16, 76, -124, 76, 56, -108, 48, 48, -116, 96, 72, -96, 92, 56, -84, 80, 80, -84, 108, 76, -68, 120, 84, -40, 96, 36, -48, 120, 100, -32, -112, 100, -36, -96, Byte.MIN_VALUE, -4, 32, -92, -16, -124, -124, -4, -96, -96, -4, -72, -112, -112, -116, 88, -92, -96, 104, -60, -64, -124, -44, -48, -104, -4, -52, -88, -12, -12, -52, Byte.MIN_VALUE, -96, -64, -88, -64, -60, -108, -60, -32, 116, -24, -4, -80, -4, -60, -92, -28, -4, -60, -4, -4, 4, 4, 4, 8, 8, 8, 12, 12, 12, 16, 16, 16, 20, 20, 20, 24, 24, 24, 24, 28, 36, 32, 32, 32, 36, 36, 36, 40, 40, 40, 32, 40, 48, 48, 48, 48, 40, 48, 56, 52, 52, 52, 60, 56, 52, 52, 56, 68, 60, 60, 60, 48, 60, 76, 64, 64, 64, 60, 64, 68, 68, 68, 68, 60, 72, 80, 56, 68, 88, 76, 76, 76, 60, 76, 96, 92, 88, 52, 80, 80, 80, 84, 84, 84, 92, 92, 92, 80, 92, 104, 96, 96, 96, 116, 112, 68, 80, 100, 124, 104, 104, 104, 108, 108, 108, 96, 108, 120, 112, 112, 112, 116, 116, 116, 124, 124, 124, 100, Byte.MIN_VALUE, -108, 116, -124, -112, 112, -120, -84, -112, -112, -112, -124, -108, -100, -72, -108, Byte.MIN_VALUE, -96, -96, -96, -104, -84, -80, -84, -84, -84, -72, -72, -72, -52, -52, -52, -40, -40, -40, -4, -52, -52, -28, -28, -28, Byte.MIN_VALUE, 0, -4, 8, 20, 16, 8, 28, 20, 8, 32, 20, 12, 36, 24, 12, 44, 32, 24, 52, 32, 28, 56, 48, 68, 32, 0, 104, 0, 24, 4, 8, 8, 16, 20, 20, 20, 24, 24, 20, 28, 28, 16, 32, 28, 24, 32, 36, 20, 40, 36, 32, 40, 40, 36, 40, 44, 48, 44, 32, 36, 44, 48, 40, 48, 52, 44, 52, 56, 64, 60, 48, 52, 60, 64, 56, 68, 72, 68, 76, 80, 76, 88, 92, 84, 92, 96, 88, 100, 104, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
     paramMap.put("Act 2", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 4, 4, 8, 0, 4, 16, 4, 8, 24, 8, 16, 24, 16, 20, 28, 4, 12, 36, 12, 24, 32, 20, 24, 32, 8, 16, 44, 16, 28, 36, 12, 32, 40, 4, 8, 56, 16, 28, 48, 20, 40, 48, 12, 20, 64, 16, 40, 56, 4, 12, 72, 28, 40, 56, 12, 32, 76, 20, 44, 68, 32, 44, 64, 8, 16, 88, 32, 52, 72, 40, 52, 68, 28, 40, 84, 20, 28, 92, 8, 36, 92, 24, 56, 84, 36, 56, 84, 16, 24, 108, 16, 44, 104, 36, 68, 92, 24, 36, 112, 36, 60, 104, 12, 44, 124, 44, 76, 100, 8, 72, 112, 24, 40, Byte.MIN_VALUE, 40, 80, 116, 36, 48, -120, 64, 80, 108, 12, 52, -116, 104, 32, 112, 68, 88, 120, 64, 64, -116, 48, 92, -124, 36, 52, -100, 24, 40, -92, 20, 72, -92, 64, 100, -116, 56, 112, -116, 80, 104, -116, 52, 68, -80, 32, 76, -76, 88, 112, -104, 64, 120, -96, 28, 96, -68, 72, -124, -100, 84, 84, -60, 32, 108, -56, 88, 124, -84, 72, -120, -80, 84, 124, -56, 32, 112, -32, 84, -100, -72, 0, 44, -4, 112, -116, -64, 80, -104, -52, 48, -124, -28, 112, 112, -32, 120, -104, -48, 60, -120, -8, 56, -96, -20, 100, -72, -40, -124, -92, -32, 68, -76, -16, 76, -64, -12, -116, -80, -16, 92, -44, -4, -80, -80, -4, 16, 36, 4, 24, 36, 20, 24, 60, 32, 12, 72, 24, 48, 68, 0, 8, 100, 24, 36, 92, 36, 36, 92, 56, 68, 108, 8, 20, 124, 40, 52, 116, 64, 48, 120, 88, 28, -100, 52, 56, -124, 112, 52, -96, 72, 76, -112, 88, 40, -68, 68, 72, -104, -124, 76, -72, 96, 0, -4, 24, 92, -36, 116, 124, -48, -116, -120, -4, -96, 40, 12, 12, 72, 24, 24, 88, 0, 0, 68, 20, 56, 104, 36, 16, 100, 60, 40, 120, 40, 40, Byte.MIN_VALUE, 16, 76, -124, 76, 56, -108, 48, 48, -116, 96, 72, -96, 92, 56, -84, 80, 80, -84, 108, 76, -68, 120, 84, -40, 96, 36, -48, 120, 100, -32, -112, 100, -36, -96, Byte.MIN_VALUE, -4, 32, -92, -16, -124, -124, -4, -96, -96, -4, -72, -112, -112, -116, 88, -92, -96, 104, -60, -64, -124, -44, -48, -104, -4, -52, -88, -12, -12, -52, Byte.MIN_VALUE, -96, -64, -88, -64, -60, -108, -60, -32, 116, -24, -4, -80, -4, -60, -92, -28, -4, -60, -4, -4, 4, 4, 4, 8, 8, 8, 12, 12, 12, 16, 16, 16, 20, 20, 20, 24, 24, 24, 24, 28, 36, 32, 32, 32, 36, 36, 36, 40, 40, 40, 32, 40, 48, 48, 48, 48, 40, 48, 56, 52, 52, 52, 60, 56, 52, 52, 56, 68, 60, 60, 60, 48, 60, 76, 64, 64, 64, 60, 64, 68, 68, 68, 68, 60, 72, 80, 56, 68, 88, 76, 76, 76, 60, 76, 96, 92, 88, 52, 80, 80, 80, 84, 84, 84, 92, 92, 92, 80, 92, 104, 96, 96, 96, 116, 112, 68, 80, 100, 124, 104, 104, 104, 108, 108, 108, 96, 108, 120, 112, 112, 112, 116, 116, 116, 124, 124, 124, 100, Byte.MIN_VALUE, -108, 116, -124, -112, 112, -120, -84, -112, -112, -112, -124, -108, -100, -72, -108, Byte.MIN_VALUE, -96, -96, -96, -104, -84, -80, -84, -84, -84, -72, -72, -72, -52, -52, -52, -40, -40, -40, -4, -52, -52, -28, -28, -28, 52, 92, 112, 64, 104, 124, 68, 112, -120, -32, 24, -4, -24, 16, -8, -12, 20, -4, -8, 20, -4, 20, 36, 28, 56, 68, 32, 88, Byte.MIN_VALUE, -108, 92, -120, -100, 100, -116, -96, 120, -100, -84, 124, -88, -72, -120, -76, -60, -88, -44, -28, 36, 52, 60, 44, 64, 72, 48, 68, 80, 52, 76, 88, 64, 88, 96, 68, 92, 104, 72, 100, 112, 76, 104, 116, 72, 112, Byte.MIN_VALUE, 84, 112, 124, 76, 116, -120, 88, 120, -124, 96, 124, -120, 112, -108, -96, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
     paramMap.put("Act 3", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 4, 4, 8, 0, 4, 16, 4, 8, 24, 8, 16, 24, 16, 20, 28, 4, 12, 36, 12, 24, 32, 20, 24, 32, 8, 16, 44, 16, 28, 36, 12, 32, 40, 4, 8, 56, 16, 28, 48, 20, 40, 48, 12, 20, 64, 16, 40, 56, 4, 12, 72, 28, 40, 56, 12, 32, 76, 20, 44, 68, 32, 44, 64, 8, 16, 88, 32, 52, 72, 40, 52, 68, 28, 40, 84, 20, 28, 92, 8, 36, 92, 24, 56, 84, 36, 56, 84, 16, 24, 108, 16, 44, 104, 36, 68, 92, 24, 36, 112, 36, 60, 104, 12, 44, 124, 44, 76, 100, 8, 72, 112, 24, 40, Byte.MIN_VALUE, 40, 80, 116, 36, 48, -120, 64, 80, 108, 12, 52, -116, 104, 32, 112, 68, 88, 120, 64, 64, -116, 48, 92, -124, 36, 52, -100, 24, 40, -92, 20, 72, -92, 64, 100, -116, 56, 112, -116, 80, 104, -116, 52, 68, -80, 32, 76, -76, 88, 112, -104, 64, 120, -96, 28, 96, -68, 72, -124, -100, 84, 84, -60, 32, 108, -56, 88, 124, -84, 72, -120, -80, 84, 124, -56, 32, 112, -32, 84, -100, -72, 0, 44, -4, 112, -116, -64, 80, -104, -52, 48, -124, -28, 112, 112, -32, 120, -104, -48, 60, -120, -8, 56, -96, -20, 100, -72, -40, -124, -92, -32, 68, -76, -16, 76, -64, -12, -116, -80, -16, 92, -44, -4, -80, -80, -4, 16, 36, 4, 24, 36, 20, 24, 60, 32, 12, 72, 24, 48, 68, 0, 8, 100, 24, 36, 92, 36, 36, 92, 56, 68, 108, 8, 20, 124, 40, 52, 116, 64, 48, 120, 88, 28, -100, 52, 56, -124, 112, 52, -96, 72, 76, -112, 88, 40, -68, 68, 72, -104, -124, 76, -72, 96, 0, -4, 24, 92, -36, 116, 124, -48, -116, -120, -4, -96, 40, 12, 12, 72, 24, 24, 88, 0, 0, 68, 20, 56, 104, 36, 16, 100, 60, 40, 120, 40, 40, Byte.MIN_VALUE, 16, 76, -124, 76, 56, -108, 48, 48, -116, 96, 72, -96, 92, 56, -84, 80, 80, -84, 108, 76, -68, 120, 84, -40, 96, 36, -48, 120, 100, -32, -112, 100, -36, -96, Byte.MIN_VALUE, -4, 32, -92, -16, -124, -124, -4, -96, -96, -4, -72, -112, -112, -116, 88, -92, -96, 104, -60, -64, -124, -44, -48, -104, -4, -52, -88, -12, -12, -52, Byte.MIN_VALUE, -96, -64, -88, -64, -60, -108, -60, -32, 116, -24, -4, -80, -4, -60, -92, -28, -4, -60, -4, -4, 4, 4, 4, 8, 8, 8, 12, 12, 12, 16, 16, 16, 20, 20, 20, 24, 24, 24, 24, 28, 36, 32, 32, 32, 36, 36, 36, 40, 40, 40, 32, 40, 48, 48, 48, 48, 40, 48, 56, 52, 52, 52, 60, 56, 52, 52, 56, 68, 60, 60, 60, 48, 60, 76, 64, 64, 64, 60, 64, 68, 68, 68, 68, 60, 72, 80, 56, 68, 88, 76, 76, 76, 60, 76, 96, 92, 88, 52, 80, 80, 80, 84, 84, 84, 92, 92, 92, 80, 92, 104, 96, 96, 96, 116, 112, 68, 80, 100, 124, 104, 104, 104, 108, 108, 108, 96, 108, 120, 112, 112, 112, 116, 116, 116, 124, 124, 124, 100, Byte.MIN_VALUE, -108, 116, -124, -112, 112, -120, -84, -112, -112, -112, -124, -108, -100, -72, -108, Byte.MIN_VALUE, -96, -96, -96, -104, -84, -80, -84, -84, -84, -72, -72, -72, -52, -52, -52, -40, -40, -40, -4, -52, -52, -28, -28, -28, 0, 4, 8, 0, 8, 12, 4, 8, 12, 0, 12, 16, 0, 16, 20, 4, 16, 20, 8, 16, 20, 4, 20, 24, 12, 20, 24, 4, 28, 32, 12, 28, 32, 0, 12, 4, 0, 16, 12, 4, 24, 12, 4, 28, 20, 8, 36, 20, 4, 36, 32, 12, 44, 28, 12, 48, 44, 20, 64, 52, 0, 4, 4, 0, 24, 24, 24, 28, 28, 28, 32, 32, 20, 36, 36, 32, 40, 40, 36, 44, 44, 32, 48, 52, 40, 48, 48, 44, 52, 52, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
   }
   private static void performMapCreate2(Map<String, RestrictableIndexColorModel> paramMap) {
     paramMap.put("Act 4", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 4, 4, 8, 0, 4, 16, 4, 8, 24, 8, 16, 24, 16, 20, 28, 4, 12, 36, 12, 24, 32, 20, 24, 32, 8, 16, 44, 16, 28, 36, 12, 32, 40, 4, 8, 56, 16, 28, 48, 20, 40, 48, 12, 20, 64, 16, 40, 56, 4, 12, 72, 28, 40, 56, 12, 32, 76, 20, 44, 68, 32, 44, 64, 8, 16, 88, 32, 52, 72, 40, 52, 68, 28, 40, 84, 20, 28, 92, 8, 36, 92, 24, 56, 84, 36, 56, 84, 16, 24, 108, 16, 44, 104, 36, 68, 92, 24, 36, 112, 36, 60, 104, 12, 44, 124, 44, 76, 100, 8, 72, 112, 24, 40, Byte.MIN_VALUE, 40, 80, 116, 36, 48, -120, 64, 80, 108, 12, 52, -116, 104, 32, 112, 68, 88, 120, 64, 64, -116, 48, 92, -124, 36, 52, -100, 24, 40, -92, 20, 72, -92, 64, 100, -116, 56, 112, -116, 80, 104, -116, 52, 68, -80, 32, 76, -76, 88, 112, -104, 64, 120, -96, 28, 96, -68, 72, -124, -100, 84, 84, -60, 32, 108, -56, 88, 124, -84, 72, -120, -80, 84, 124, -56, 32, 112, -32, 84, -100, -72, 0, 44, -4, 112, -116, -64, 80, -104, -52, 48, -124, -28, 112, 112, -32, 120, -104, -48, 60, -120, -8, 56, -96, -20, 100, -72, -40, -124, -92, -32, 68, -76, -16, 76, -64, -12, -116, -80, -16, 92, -44, -4, -80, -80, -4, 16, 36, 4, 24, 36, 20, 24, 60, 32, 12, 72, 24, 48, 68, 0, 8, 100, 24, 36, 92, 36, 36, 92, 56, 68, 108, 8, 20, 124, 40, 52, 116, 64, 48, 120, 88, 28, -100, 52, 56, -124, 112, 52, -96, 72, 76, -112, 88, 40, -68, 68, 72, -104, -124, 76, -72, 96, 0, -4, 24, 92, -36, 116, 124, -48, -116, -120, -4, -96, 40, 12, 12, 72, 24, 24, 88, 0, 0, 68, 20, 56, 104, 36, 16, 100, 60, 40, 120, 40, 40, Byte.MIN_VALUE, 16, 76, -124, 76, 56, -108, 48, 48, -116, 96, 72, -96, 92, 56, -84, 80, 80, -84, 108, 76, -68, 120, 84, -40, 96, 36, -48, 120, 100, -32, -112, 100, -36, -96, Byte.MIN_VALUE, -4, 32, -92, -16, -124, -124, -4, -96, -96, -4, -72, -112, -112, -116, 88, -92, -96, 104, -60, -64, -124, -44, -48, -104, -4, -52, -88, -12, -12, -52, Byte.MIN_VALUE, -96, -64, -88, -64, -60, -108, -60, -32, 116, -24, -4, -80, -4, -60, -92, -28, -4, -60, -4, -4, 4, 4, 4, 8, 8, 8, 12, 12, 12, 16, 16, 16, 20, 20, 20, 24, 24, 24, 24, 28, 36, 32, 32, 32, 36, 36, 36, 40, 40, 40, 32, 40, 48, 48, 48, 48, 40, 48, 56, 52, 52, 52, 60, 56, 52, 52, 56, 68, 60, 60, 60, 48, 60, 76, 64, 64, 64, 60, 64, 68, 68, 68, 68, 60, 72, 80, 56, 68, 88, 76, 76, 76, 60, 76, 96, 92, 88, 52, 80, 80, 80, 84, 84, 84, 92, 92, 92, 80, 92, 104, 96, 96, 96, 116, 112, 68, 80, 100, 124, 104, 104, 104, 108, 108, 108, 96, 108, 120, 112, 112, 112, 116, 116, 116, 124, 124, 124, 100, Byte.MIN_VALUE, -108, 116, -124, -112, 112, -120, -84, -112, -112, -112, -124, -108, -100, -72, -108, Byte.MIN_VALUE, -96, -96, -96, -104, -84, -80, -84, -84, -84, -72, -72, -72, -52, -52, -52, -40, -40, -40, -4, -52, -52, -28, -28, -28, 0, 0, 4, 8, 8, 12, 4, 32, 116, 4, 60, Byte.MIN_VALUE, 8, 88, -104, 12, 104, -92, 16, 84, -72, 20, -124, -72, 28, -120, -32, 32, -100, -24, 36, -84, -16, 40, -68, -12, 52, -32, -4, 0, 124, 0, -60, 116, 4, 0, 4, 4, 4, 8, 8, 12, 12, 16, 12, 16, 16, 12, 16, 20, 16, 20, 20, 16, 20, 24, 20, 24, 24, 20, 24, 28, 24, 28, 32, 24, 32, 36, 28, 32, 36, 32, 36, 40, 32, 40, 44, 36, 44, 48, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
     paramMap.put("Act 5", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 4, 4, 8, 0, 4, 16, 4, 8, 24, 8, 16, 24, 16, 20, 28, 4, 12, 36, 12, 24, 32, 20, 24, 32, 8, 16, 44, 16, 28, 36, 12, 32, 40, 4, 8, 56, 16, 28, 48, 20, 40, 48, 12, 20, 64, 16, 40, 56, 4, 12, 72, 28, 40, 56, 12, 32, 76, 20, 44, 68, 32, 44, 64, 8, 16, 88, 32, 52, 72, 40, 52, 68, 28, 40, 84, 20, 28, 92, 8, 36, 92, 24, 56, 84, 36, 56, 84, 16, 24, 108, 16, 44, 104, 36, 68, 92, 24, 36, 112, 36, 60, 104, 12, 44, 124, 44, 76, 100, 8, 72, 112, 24, 40, Byte.MIN_VALUE, 40, 80, 116, 36, 48, -120, 64, 80, 108, 12, 52, -116, 104, 32, 112, 68, 88, 120, 64, 64, -116, 48, 92, -124, 36, 52, -100, 24, 40, -92, 20, 72, -92, 64, 100, -116, 56, 112, -116, 80, 104, -116, 52, 68, -80, 32, 76, -76, 88, 112, -104, 64, 120, -96, 28, 96, -68, 72, -124, -100, 84, 84, -60, 32, 108, -56, 88, 124, -84, 72, -120, -80, 84, 124, -56, 32, 112, -32, 84, -100, -72, 0, 44, -4, 112, -116, -64, 80, -104, -52, 48, -124, -28, 112, 112, -32, 120, -104, -48, 60, -120, -8, 56, -96, -20, 100, -72, -40, -124, -92, -32, 68, -76, -16, 76, -64, -12, -116, -80, -16, 92, -44, -4, -80, -80, -4, 16, 36, 4, 24, 36, 20, 24, 60, 32, 12, 72, 24, 48, 68, 0, 8, 100, 24, 36, 92, 36, 36, 92, 56, 68, 108, 8, 20, 124, 40, 52, 116, 64, 48, 120, 88, 28, -100, 52, 56, -124, 112, 52, -96, 72, 76, -112, 88, 40, -68, 68, 72, -104, -124, 76, -72, 96, 0, -4, 24, 92, -36, 116, 124, -48, -116, -120, -4, -96, 40, 12, 12, 72, 24, 24, 88, 0, 0, 68, 20, 56, 104, 36, 16, 100, 60, 40, 120, 40, 40, Byte.MIN_VALUE, 16, 76, -124, 76, 56, -108, 48, 48, -116, 96, 72, -96, 92, 56, -84, 80, 80, -84, 108, 76, -68, 120, 84, -40, 96, 36, -48, 120, 100, -32, -112, 100, -36, -96, Byte.MIN_VALUE, -4, 32, -92, -16, -124, -124, -4, -96, -96, -4, -72, -112, -112, -116, 88, -92, -96, 104, -60, -64, -124, -44, -48, -104, -4, -52, -88, -12, -12, -52, Byte.MIN_VALUE, -96, -64, -88, -64, -60, -108, -60, -32, 116, -24, -4, -80, -4, -60, -92, -28, -4, -60, -4, -4, 4, 4, 4, 8, 8, 8, 12, 12, 12, 16, 16, 16, 20, 20, 20, 24, 24, 24, 24, 28, 36, 32, 32, 32, 36, 36, 36, 40, 40, 40, 32, 40, 48, 48, 48, 48, 40, 48, 56, 52, 52, 52, 60, 56, 52, 52, 56, 68, 60, 60, 60, 48, 60, 76, 64, 64, 64, 60, 64, 68, 68, 68, 68, 60, 72, 80, 56, 68, 88, 76, 76, 76, 60, 76, 96, 92, 88, 52, 80, 80, 80, 84, 84, 84, 92, 92, 92, 80, 92, 104, 96, 96, 96, 116, 112, 68, 80, 100, 124, 104, 104, 104, 108, 108, 108, 96, 108, 120, 112, 112, 112, 116, 116, 116, 124, 124, 124, 100, Byte.MIN_VALUE, -108, 116, -124, -112, 112, -120, -84, -112, -112, -112, -124, -108, -100, -72, -108, Byte.MIN_VALUE, -96, -96, -96, -104, -84, -80, -84, -84, -84, -72, -72, -72, -52, -52, -52, -40, -40, -40, -4, -52, -52, -28, -28, -28, 40, 8, -60, 24, 44, -52, 28, 4, -16, 60, 16, -20, 40, 88, -4, 100, 56, -8, 41, 110, 76, -46, -65, 113, 0, 52, 0, 0, -124, 0, 80, -116, 12, 28, -60, 12, -60, -76, 40, -28, 112, 92, -8, -8, 76, 37, 67, 54, 45, 89, 67, 60, 110, 83, 24, 36, 31, 32, 62, 47, 20, 32, 36, 32, 48, 52, 52, 52, 40, 72, 72, 56, 88, 92, 72, 100, 104, 84, 116, 120, 100, -124, -120, 116, -100, -100, -108, -4, -4, -4, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
     paramMap.put("Endgame", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 0, 0, 4, 0, 0, 8, 0, 4, 8, 4, 4, 8, 4, 4, 12, 4, 8, 12, 0, 0, 16, 8, 8, 12, 4, 8, 16, 4, 12, 16, 8, 12, 16, 4, 12, 20, 8, 12, 20, 8, 16, 20, 8, 16, 24, 12, 20, 24, 8, 20, 28, 12, 20, 28, 16, 20, 28, 12, 24, 32, 8, 20, 36, 16, 24, 32, 20, 24, 32, 16, 28, 36, 20, 28, 36, 12, 28, 44, 20, 32, 40, 12, 32, 52, 20, 36, 48, 20, 40, 56, 20, 40, 68, 28, 44, 64, 32, 52, 72, 24, 52, 80, 20, 44, 96, 40, 60, 80, 28, 64, 84, 28, 60, 96, 36, 72, 96, 16, 40, 120, 32, 64, 108, 40, 80, 104, 40, 72, 120, 44, 88, 116, 32, 72, -124, 44, 88, Byte.MIN_VALUE, 64, 92, Byte.MIN_VALUE, 52, 88, -116, 36, 84, -104, 52, 108, -124, 24, 100, -108, 76, 100, -124, 48, 108, -108, 56, 120, -112, 80, 108, -112, 52, Byte.MIN_VALUE, -108, 84, 116, -104, 0, 4, 0, 72, -120, -108, 60, -116, -104, 64, -108, -104, 76, -104, -104, 88, -104, -104, 104, -104, -104, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 16, 8, 16, 16, 12, 16, 16, 16, 16, 16, 12, 16, 20, 12, 20, 20, 16, 20, 20, 20, 20, 20, 16, 20, 24, 20, 20, 24, 16, 24, 24, 20, 24, 24, 16, 24, 28, 24, 24, 24, 20, 24, 28, 24, 24, 28, 20, 28, 28, 16, 28, 32, 24, 28, 28, 20, 28, 32, 24, 28, 32, 28, 28, 32, 24, 32, 32, 24, 28, 36, 20, 32, 36, 28, 32, 32, 24, 32, 36, 32, 32, 32, 28, 32, 36, 24, 32, 40, 32, 32, 36, 28, 32, 40, 32, 36, 36, 36, 36, 36, 32, 36, 40, 28, 36, 44, 24, 40, 44, 36, 36, 40, 36, 40, 40, 32, 40, 44, 28, 40, 48, 40, 40, 40, 36, 40, 44, 32, 40, 48, 40, 40, 44, 28, 44, 52, 40, 44, 44, 36, 44, 48, 40, 44, 48, 40, 48, 48, 32, 48, 56, 44, 48, 48, 40, 48, 52, 44, 48, 52, 52, 48, 44, 48, 48, 52, 36, 52, 60, 48, 52, 52, 44, 52, 56, 48, 52, 56, 32, 56, 64, 52, 52, 56, 52, 56, 56, 52, 56, 60, 40, 60, 68, 56, 60, 60, 52, 60, 64, 56, 60, 64, 56, 64, 64, 60, 64, 64, 56, 64, 68, 52, 64, 72, 60, 64, 68, 60, 64, 72, 64, 68, 68, 60, 68, 72, 72, 68, 60, 56, 68, 76, 64, 68, 72, 64, 68, 76, 64, 72, 76, 68, 72, 76, 60, 72, 84, 68, 72, 80, 48, 80, 88, 68, 76, 80, 72, 76, 80, 64, 76, 88, 72, 76, 84, 60, 76, 96, 72, 80, 84, 88, 80, 68, 80, 80, 80, 76, 80, 84, 76, 84, 88, 80, 84, 88, 72, 84, 96, 64, 84, 104, 80, 88, 92, 84, 88, 92, 80, 88, 96, 76, 88, 100, 84, 88, 96, 84, 92, 96, 80, 92, 100, 88, 92, 96, 96, 92, 88, 72, 92, 112, 88, 96, 100, 104, 96, 84, 84, 96, 104, 80, 96, 108, 92, 96, 100, 92, 100, 104, 76, 96, 120, 96, 100, 104, 88, 100, 112, 96, 104, 108, 104, 104, 104, 96, 104, 112, 80, 100, Byte.MIN_VALUE, 100, 108, 112, 96, 108, 116, 68, 116, Byte.MIN_VALUE, 100, 108, 116, 112, 112, 108, 104, 112, 116, 120, 112, 100, 100, 112, 120, 92, 112, -124, 108, 116, 120, 104, 116, 124, 116, 116, 116, 108, 120, Byte.MIN_VALUE, 124, 124, 120, 116, 124, Byte.MIN_VALUE, 92, 124, -104, 116, Byte.MIN_VALUE, -120, Byte.MIN_VALUE, Byte.MIN_VALUE, Byte.MIN_VALUE, 96, -124, -104, 120, -124, -116, -116, -124, 124, 104, -116, -104, 124, -120, -112, -120, -120, -120, -116, -116, -120, Byte.MIN_VALUE, -116, -108, 120, -104, -104, -120, -112, -108, -112, -112, -112, -108, -108, -108, -116, -104, -104, -104, -104, -104, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
   }
   private static void performMapCreate3(Map<String, RestrictableIndexColorModel> paramMap) {
     paramMap.put("Endgame 2", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 4, 4, 8, 4, 8, 12, 4, 8, 16, 4, 12, 16, 8, 12, 16, 4, 12, 20, 8, 12, 20, 8, 16, 20, 4, 16, 24, 8, 16, 24, 8, 20, 24, 8, 20, 28, 8, 20, 32, 12, 24, 28, 8, 24, 32, 8, 24, 36, 8, 28, 36, 12, 28, 36, 8, 28, 40, 16, 32, 36, 12, 32, 40, 16, 32, 40, 12, 32, 44, 8, 32, 48, 20, 36, 44, 12, 36, 48, 16, 36, 48, 20, 40, 48, 16, 40, 52, 20, 40, 52, 16, 40, 56, 20, 44, 52, 24, 44, 52, 20, 44, 56, 24, 44, 56, 20, 44, 60, 28, 48, 56, 24, 48, 60, 20, 48, 68, 28, 52, 64, 24, 52, 68, 36, 56, 68, 28, 56, 72, 24, 56, 76, 32, 60, 76, 28, 60, 80, 36, 64, 76, 32, 64, 84, 12, 40, 108, 32, 68, 92, 44, 76, 88, 40, 76, 96, 44, 80, 100, 48, 88, 112, 52, 96, 124, 64, 108, -124, 68, 116, -112, 4, 8, 4, 8, 12, 8, 8, 4, 4, 12, 8, 8, 16, 12, 8, 24, 20, 12, 32, 12, 8, 28, 20, 16, 56, 40, 36, 72, 40, 32, 72, 48, 40, 76, 56, 48, 88, -124, -112, 96, -116, -100, 112, -88, -68, Byte.MIN_VALUE, -76, -52, -108, -44, -16, 4, 4, 4, 8, 8, 4, 4, 8, 8, 8, 8, 8, 12, 12, 8, 12, 16, 12, 16, 12, 12, 8, 16, 16, 16, 16, 8, 12, 16, 16, 16, 16, 12, 20, 16, 12, 12, 20, 16, 20, 20, 8, 16, 20, 16, 12, 20, 20, 16, 20, 20, 24, 20, 16, 16, 24, 20, 20, 24, 20, 16, 24, 24, 20, 24, 24, 20, 28, 24, 28, 28, 16, 24, 28, 24, 20, 28, 28, 16, 28, 32, 24, 28, 28, 32, 24, 24, 24, 32, 28, 28, 32, 28, 24, 32, 32, 36, 32, 20, 28, 36, 32, 32, 36, 32, 28, 36, 36, 36, 32, 36, 44, 32, 32, 24, 40, 44, 36, 40, 36, 32, 40, 40, 36, 44, 40, 32, 44, 44, 28, 44, 48, 40, 40, 44, 36, 44, 44, 48, 40, 40, 32, 48, 52, 40, 48, 48, 40, 52, 52, 48, 52, 48, 32, 52, 60, 36, 52, 60, 56, 48, 48, 44, 56, 56, 36, 56, 64, 52, 56, 52, 52, 60, 56, 36, 60, 68, 40, 60, 68, 52, 64, 64, 72, 56, 52, 44, 64, 72, 60, 64, 60, 68, 60, 60, 44, 68, 76, 56, 68, 68, 56, 68, 72, 80, 60, 56, 72, 64, 64, 48, 72, 80, 64, 72, 72, 76, 68, 68, 56, 76, 80, 84, 68, 64, 68, 80, 76, 52, 80, 88, 84, 76, 76, 60, 84, 92, 76, 80, 84, 96, 76, 68, 92, 80, 76, 64, 88, 96, 60, 92, 104, 100, 84, 80, 96, 88, 84, 68, 96, 104, 84, 92, 96, 108, 88, 80, 88, 96, 100, 104, 92, 88, 104, 96, 92, 72, 104, 112, 96, 100, 104, 112, 96, 92, 108, 100, 96, 76, 108, 116, 116, 96, 92, 96, 104, 112, 116, 100, 96, 104, 104, 108, 112, 104, 100, 116, 104, 96, 80, 112, 124, 108, 108, 108, 116, 108, 104, 100, 112, 116, 120, 108, 100, 108, 112, 116, 88, 120, Byte.MIN_VALUE, 116, 112, 112, 124, 112, 104, 120, 116, 112, 120, 116, 116, Byte.MIN_VALUE, 116, 112, 96, Byte.MIN_VALUE, -120, 124, 120, 120, -124, 120, 116, 120, 124, Byte.MIN_VALUE, Byte.MIN_VALUE, 124, 124, -124, 124, 120, -120, 124, 120, Byte.MIN_VALUE, Byte.MIN_VALUE, Byte.MIN_VALUE, 100, -120, -112, -120, Byte.MIN_VALUE, 124, -120, -124, Byte.MIN_VALUE, 124, -120, -116, -120, -120, -120, -116, -120, -124, -112, -120, -120, Byte.MIN_VALUE, -116, -108, 112, -108, -100, -112, -116, -116, -108, -112, -116, -116, -108, -108, -104, -108, -112, -120, -104, -100, -112, -100, -92, -100, -100, -100, -100, -92, -88, -92, -92, -92, -104, -88, -80, -84, -84, -84, -92, -80, -76, -80, -80, -80, -76, -72, -72, -72, -64, -64, -60, -52, -52, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
     paramMap.put("Character Creation (fechar)", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 0, 0, 4, 4, 4, 8, 4, 8, 12, 8, 8, 12, 4, 4, 20, 8, 12, 16, 8, 12, 20, 8, 16, 20, 4, 12, 24, 12, 16, 24, 4, 8, 32, 8, 16, 28, 12, 20, 24, 12, 20, 28, 16, 20, 28, 4, 16, 36, 8, 20, 36, 16, 24, 32, 4, 16, 44, 12, 28, 36, 20, 28, 36, 12, 24, 44, 20, 28, 44, 8, 20, 52, 12, 28, 52, 0, 0, 64, 24, 36, 52, 16, 32, 60, 4, 4, 72, 8, 24, 68, 4, 36, 68, 20, 40, 64, 16, 24, 76, 32, 44, 64, 4, 4, 84, 20, 40, 76, 12, 32, 84, 24, 52, 72, 4, 4, 96, 36, 52, 76, 24, 48, 84, 4, 48, 88, 20, 32, 96, 4, 4, 104, 44, 60, 88, 32, 56, 96, 4, 56, 104, 24, 36, 112, 8, 8, 120, 16, 52, 108, 28, 72, 100, 32, 60, 108, 48, 68, 100, 8, 8, -124, 8, 68, 120, 36, 72, 116, 28, 44, -124, 20, 20, -116, 40, 88, 112, 56, 80, 116, 32, 32, -108, 4, 92, Byte.MIN_VALUE, 40, 76, -120, 64, 88, 124, 12, 12, -88, 60, 92, -120, 44, 96, -116, 16, 88, -104, 48, 52, -92, 76, 104, -108, 8, 92, -80, 28, 28, -60, 48, 116, -100, 24, 100, -84, 16, 124, -96, 52, 52, -64, 8, 8, -40, 52, Byte.MIN_VALUE, -84, 84, 116, -88, 24, 116, -64, 80, 80, -56, 16, -120, -68, 96, -124, -72, 40, 40, -16, 8, 8, -4, 24, 124, -36, 48, -100, -60, 60, -108, -56, 28, -92, -44, 68, 68, -4, 48, -112, -32, 64, -80, -48, 36, -112, -16, 96, 96, -4, 28, -108, -4, 84, -68, -36, 44, -96, -4, 120, 120, -4, 48, -80, -4, 68, -68, -4, 36, -44, -4, 68, -44, -4, -92, -92, -4, 88, -36, -4, Byte.MIN_VALUE, -48, -4, 0, 4, 0, 12, 20, 4, 20, 32, 4, 28, 40, 4, 44, 60, 4, 4, 0, 0, 8, 4, 0, 12, 8, 0, 16, 12, 0, 24, 0, 0, 20, 16, 0, 24, 20, 4, 40, 0, 0, 36, 24, 4, 48, 4, 0, 40, 32, 4, 52, 24, 16, 48, 36, 4, 64, 20, 4, 56, 44, 4, 72, 28, 12, 64, 48, 8, 72, 36, 24, 80, 60, 8, 84, 12, 56, 84, 48, 32, 88, 68, 8, 100, 76, 8, 96, 80, 40, 116, 88, 12, Byte.MIN_VALUE, 16, 92, -120, 104, 12, -116, 116, 48, -96, 120, 16, -72, 88, 20, -88, 24, 124, -76, -120, 16, -80, -120, 96, -52, -100, 20, -28, Byte.MIN_VALUE, 56, -48, -96, 112, -24, -80, 24, -36, -76, 72, -4, 40, -92, -24, -80, 120, -4, -56, 24, -16, -52, 104, -4, -28, 48, -40, -68, -84, -4, -44, -112, -4, -4, 84, -16, -48, -68, -4, -4, -108, -4, -28, -72, -4, -16, -40, 52, -72, -72, 124, -88, -72, -120, -80, -44, -108, -68, -52, Byte.MIN_VALUE, -60, -40, 64, -12, -4, 108, -16, -4, -100, -32, -4, -124, -4, -4, -92, -4, -4, 0, 4, 4, 4, 4, 0, 4, 4, 4, 4, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 16, 16, 12, 12, 12, 16, 16, 16, 16, 16, 12, 16, 20, 20, 16, 16, 16, 20, 20, 20, 20, 20, 16, 20, 24, 20, 20, 24, 24, 20, 20, 16, 24, 28, 24, 24, 24, 20, 24, 28, 20, 28, 32, 24, 28, 32, 24, 32, 36, 32, 32, 32, 24, 32, 40, 36, 36, 36, 32, 40, 44, 44, 40, 36, 32, 44, 52, 48, 48, 48, 40, 48, 56, 48, 60, 68, 60, 64, 68, 76, 64, 56, 56, 68, 76, 60, 76, 84, 72, 76, 80, 68, 84, 96, 100, 84, 68, 80, 92, 100, 112, 96, 84, 80, 100, 112, 104, 108, 112, Byte.MIN_VALUE, 108, 96, 92, 112, Byte.MIN_VALUE, 124, 124, 124, -116, 124, 112, 108, -120, -104, -96, -116, Byte.MIN_VALUE, -88, -88, -88, -64, -88, -104, -32, -32, -32, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
     paramMap.put("Loading", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 4, 4, 8, 4, 8, 12, 8, 8, 12, 8, 12, 16, 12, 16, 24, 12, 16, 32, 16, 20, 28, 20, 24, 32, 16, 20, 40, 20, 24, 36, 24, 28, 40, 20, 28, 48, 24, 32, 44, 16, 24, 56, 24, 32, 52, 28, 36, 52, 24, 32, 60, 32, 40, 52, 28, 36, 60, 20, 32, 72, 32, 40, 64, 28, 40, 72, 36, 44, 68, 24, 36, 80, 40, 48, 72, 32, 44, 80, 24, 40, 92, 36, 48, 88, 44, 56, 80, 32, 48, 100, 44, 56, 92, 36, 52, 108, 44, 76, 92, 44, 60, 104, 28, 48, 116, 56, 68, 96, 36, 56, 120, 48, 64, 112, 40, 60, 124, 64, 80, 104, 44, 64, Byte.MIN_VALUE, 36, 60, -120, 56, 72, 124, 48, 68, -120, 56, 76, -120, 40, 64, -108, 48, 72, -112, 52, 76, -104, 40, 68, -96, 80, 96, Byte.MIN_VALUE, 60, 84, -104, 44, 72, -88, 56, 80, -92, 68, 92, -100, 52, 80, -80, 84, 104, -104, 44, 76, -72, 76, 100, -92, 60, 88, -76, 56, 88, -68, 48, 80, -60, 36, 72, -52, 80, 108, -72, 60, 92, -56, 92, 116, -80, 80, -120, -84, 52, 88, -44, 68, 104, -48, 56, 92, -32, 64, 100, -36, 100, Byte.MIN_VALUE, -60, 72, 108, -36, 56, 96, -16, 80, 116, -32, 68, 108, -24, 92, 124, -40, 64, 104, -16, 112, -116, -52, 88, 124, -28, 76, 116, -16, 60, 104, -4, 76, Byte.MIN_VALUE, -16, 68, 116, -4, 72, 124, -4, 100, -120, -16, 80, Byte.MIN_VALUE, -4, 80, -116, -4, 88, -112, -4, 104, -112, -4, 92, -104, -4, 92, -96, -4, 100, -96, -4, 96, -88, -4, 112, -92, -4, 108, -80, -4, 104, -72, -4, 120, -72, -4, 112, -64, -4, 120, -52, -4, 124, -44, -4, 4, 8, 4, 8, 12, 8, 88, 44, 52, 76, -104, -124, 92, -120, -108, 88, -108, -116, 96, -112, -100, 108, -96, -84, 116, -84, -72, 124, -72, -60, Byte.MIN_VALUE, -60, -40, -120, -56, -36, -116, -40, -20, -124, -36, -4, -112, -36, -8, -124, -28, -4, -120, -20, -4, -72, -32, -20, -100, -16, -4, -108, -4, -4, -96, -4, -4, -88, -4, -4, -80, -4, -4, -68, -4, -4, -60, -4, -4, -48, -4, -4, -16, -4, -4, 4, 4, 4, 4, 8, 8, 8, 8, 4, 8, 8, 8, 12, 12, 8, 12, 12, 12, 12, 16, 12, 12, 12, 16, 16, 16, 12, 12, 16, 16, 16, 16, 16, 12, 16, 20, 16, 20, 16, 20, 20, 16, 16, 20, 20, 20, 20, 20, 16, 20, 24, 20, 24, 20, 20, 20, 24, 24, 24, 20, 20, 24, 24, 24, 24, 24, 20, 24, 28, 24, 28, 24, 24, 24, 28, 28, 28, 24, 24, 28, 28, 24, 28, 32, 28, 32, 24, 28, 32, 28, 24, 28, 36, 32, 32, 28, 28, 32, 32, 32, 32, 32, 28, 32, 36, 32, 36, 28, 32, 36, 32, 28, 32, 40, 36, 36, 32, 32, 36, 36, 36, 40, 32, 32, 36, 40, 36, 40, 36, 40, 40, 32, 32, 36, 44, 40, 40, 36, 36, 40, 44, 40, 44, 36, 44, 44, 36, 32, 44, 48, 44, 44, 40, 40, 44, 48, 44, 48, 40, 48, 48, 40, 36, 44, 56, 36, 52, 52, 44, 48, 52, 52, 52, 44, 40, 52, 60, 56, 56, 48, 40, 60, 64, 44, 64, 68, 56, 64, 68, 64, 64, 64, 48, 72, 76, 52, 68, 80, 48, 76, 84, 64, 72, 80, 56, 80, 84, 52, 84, 92, 60, 88, 92, 80, 84, 84, 68, 88, 96, 80, 88, 92, 60, 92, 104, 80, 92, 104, 72, 104, 108, 84, 96, 112, 68, 108, 116, 76, 108, 116, 76, 112, 124, 96, 108, 116, 76, 116, Byte.MIN_VALUE, 84, 124, Byte.MIN_VALUE, 92, 112, -116, 88, Byte.MIN_VALUE, -120, 104, 124, -124, 100, 120, -100, 116, -120, -112, -84, -84, -84, -68, -68, -68, -48, -48, -48, -32, -32, -32, -4, -4, -4, 0, 0, 0, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
   }
   private static void performMapCreate4(Map<String, RestrictableIndexColorModel> paramMap) {
     paramMap.put("Menu 0", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 0, 0, 8, 0, 0, 16, 0, 8, 16, 8, 8, 16, 8, 8, 24, 8, 16, 24, 16, 16, 24, 8, 16, 32, 16, 16, 32, 8, 24, 32, 16, 24, 32, 24, 16, 32, 8, 16, 40, 16, 16, 40, 16, 24, 40, 24, 24, 40, 16, 24, 48, 24, 24, 48, 16, 32, 48, 24, 32, 48, 16, 24, 56, 32, 32, 48, 16, 32, 56, 24, 32, 56, 32, 32, 56, 24, 40, 56, 32, 40, 56, 24, 32, 68, 32, 32, 68, 24, 40, 68, 16, 32, 76, 32, 40, 68, 24, 32, 76, 40, 40, 68, 24, 40, 76, 32, 48, 68, 32, 40, 76, 40, 48, 68, 40, 40, 76, 32, 48, 76, 24, 40, 84, 40, 48, 76, 32, 40, 84, 32, 48, 84, 40, 48, 84, 24, 48, 92, 32, 48, 92, 40, 56, 84, 40, 48, 92, 32, 56, 92, 40, 56, 92, 32, 48, 100, 32, 56, 100, 40, 56, 100, 40, 56, 108, 48, 68, 116, 0, 8, 0, 0, 16, 8, 8, 16, 8, 8, 24, 16, 16, 24, 16, 8, 0, 0, 16, 8, 8, 24, 16, 16, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 16, 16, 8, 16, 16, 16, 8, 16, 16, 16, 8, 16, 16, 16, 16, 24, 24, 24, 16, 24, 24, 24, 24, 24, 24, 32, 24, 32, 24, 32, 24, 24, 16, 32, 32, 24, 32, 32, 32, 24, 32, 32, 32, 32, 24, 32, 40, 32, 32, 40, 32, 40, 32, 40, 32, 32, 24, 40, 40, 32, 40, 40, 40, 32, 40, 40, 40, 40, 32, 40, 48, 40, 40, 48, 40, 48, 40, 48, 40, 40, 32, 48, 48, 40, 48, 48, 48, 40, 48, 48, 48, 40, 48, 48, 48, 40, 48, 56, 48, 48, 56, 48, 56, 48, 56, 48, 48, 40, 56, 56, 48, 56, 56, 56, 48, 56, 56, 56, 56, 48, 56, 68, 56, 56, 68, 56, 68, 56, 68, 56, 56, 48, 68, 68, 56, 68, 68, 68, 56, 68, 56, 68, 76, 56, 76, 68, 68, 68, 68, 56, 76, 76, 68, 68, 76, 68, 76, 68, 76, 68, 68, 56, 76, 84, 68, 76, 76, 76, 68, 76, 76, 76, 68, 76, 76, 76, 68, 76, 84, 76, 76, 84, 76, 84, 76, 84, 76, 76, 68, 84, 84, 76, 84, 84, 84, 76, 84, 84, 84, 76, 68, 84, 92, 84, 84, 84, 76, 84, 92, 84, 84, 92, 84, 92, 84, 92, 84, 84, 76, 92, 92, 84, 92, 92, 92, 84, 92, 92, 92, 84, 76, 92, 100, 92, 92, 92, 84, 92, 100, 92, 92, 100, 92, 100, 92, 100, 92, 92, 84, 100, 100, 92, 100, 100, 100, 92, 100, 84, 100, 108, 100, 100, 100, 100, 100, 108, 100, 108, 100, 108, 100, 100, 92, 108, 108, 100, 108, 108, 108, 100, 108, 108, 108, 108, 100, 108, 116, 108, 108, 116, 108, 116, 108, 116, 108, 108, 108, 116, 116, 116, 108, 116, 116, 116, 116, 124, 116, 116, 116, 124, 116, 116, 116, 124, 116, 124, 124, 124, 124, 124, 116, 124, -124, 124, 124, -124, 124, -124, 124, -124, 124, 124, 116, -124, -124, 124, -124, -124, -124, -124, -124, 124, -124, -116, -116, -124, -124, -124, -124, -116, -124, -116, -124, 124, -116, -116, -124, -116, -116, -116, -116, -124, -116, -116, -116, -124, -116, -108, -108, -116, -116, -116, -116, -108, -124, -108, -108, -116, -108, -108, -108, -108, -108, -116, -108, -100, -100, -108, -108, -108, -108, -100, -116, -100, -100, -108, -100, -100, -100, -108, -100, -116, -100, -92, -100, -100, -100, -108, -100, -92, -108, -92, -92, -100, -92, -92, -92, -92, -92, -100, -92, -84, -84, -92, -92, -100, -84, -84, -92, -84, -84, -84, -84, -84, -76, -84, -84, -84, -76, -76, -76, -76, -76, -76, -68, -68, -68, -68, -68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
     paramMap.put("Menu 1", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 0, 0, 4, 0, 0, 8, 4, 4, 8, 0, 8, 16, 4, 8, 16, 0, 8, 24, 4, 8, 24, 12, 12, 24, 8, 16, 24, 8, 16, 28, 8, 16, 32, 12, 16, 32, 16, 16, 32, 0, 8, 40, 20, 20, 32, 0, 16, 40, 16, 24, 32, 4, 16, 40, 12, 16, 40, 20, 24, 36, 16, 24, 40, 4, 20, 48, 24, 24, 40, 8, 24, 48, 20, 28, 44, 16, 24, 48, 0, 8, 56, 0, 16, 56, 4, 20, 56, 8, 24, 56, 20, 28, 52, 24, 32, 48, 16, 32, 56, 0, 8, 68, 0, 16, 68, 20, 32, 60, 8, 32, 64, 8, 24, 68, 16, 24, 68, 16, 32, 68, 0, 16, 76, 0, 40, 68, 20, 36, 68, 16, 24, 76, 8, 32, 76, 16, 32, 76, 0, 16, 84, 8, 32, 84, 16, 40, 80, 16, 32, 84, 40, 48, 68, 24, 40, 84, 16, 32, 92, 8, 40, 92, 16, 48, 88, 16, 40, 92, 0, 48, 92, 16, 40, 96, 8, 32, 100, 16, 32, 100, 24, 48, 92, 16, 40, 100, 0, 16, 108, 8, 32, 108, 16, 32, 108, 16, 52, 100, 24, 40, 108, 16, 44, 108, 16, 48, 108, 0, 32, 116, 16, 40, 116, 16, 48, 116, 24, 48, 116, 16, 60, 112, 40, 56, 108, 16, 56, 116, 16, 40, 124, 0, 16, -124, 16, 48, 124, 24, 48, 124, 16, 60, 120, 20, 80, 108, 16, 56, Byte.MIN_VALUE, 16, 48, -124, 24, 48, -124, 8, 32, -116, 24, 56, -124, 16, 68, Byte.MIN_VALUE, 48, 68, 124, 0, 24, -108, 16, 64, -120, 16, 56, -116, 24, 56, -116, 16, 76, -124, 24, 56, -108, 20, 68, -112, 20, 76, -108, 20, 84, -112, 8, 48, -92, 0, 16, -84, 40, 68, -100, 20, 84, -100, 24, 68, -92, 16, 80, -96, 24, 88, -92, 24, 96, -96, 8, 56, -76, 16, 88, -88, 16, 96, -92, 40, 76, -84, 8, 48, -68, 56, 104, -96, 24, 100, -84, 0, 24, -56, 16, 96, -76, 20, 108, -80, 28, 108, -80, 8, 48, -48, 32, 112, -76, 12, 100, -64, 12, 108, -68, 0, 24, -40, 16, 76, -48, 20, 120, -68, 32, 120, -68, 72, Byte.MIN_VALUE, -80, 12, 112, -56, 8, 56, -32, 36, Byte.MIN_VALUE, -64, 16, Byte.MIN_VALUE, -56, 8, 84, -32, 8, 120, -44, 36, -120, -56, 0, 48, -16, 0, 32, -8, 12, Byte.MIN_VALUE, -40, 24, -116, -48, 64, -112, -56, 8, 56, -4, 40, -108, -48, 16, -116, -36, 16, 92, -4, 28, -104, -36, 44, -100, -40, 12, -112, -24, 16, 116, -4, 44, -92, -36, 16, -104, -20, 36, -92, -28, 84, -92, -40, 108, -92, -48, 20, -96, -16, 48, -84, -28, 68, -84, -32, 32, -84, -16, 48, -76, -20, 72, -76, -24, 52, -72, -20, 36, -76, -12, 108, -76, -32, 52, -68, -16, 44, -68, -8, 52, -64, -12, 72, -68, -12, 80, -64, -16, 92, -64, -16, 60, -56, -8, 84, -56, -8, -124, -56, -16, 92, -48, -4, 120, -52, -12, 8, -16, -4, 116, -40, -4, -124, -92, -68, -112, -80, -56, -112, -72, -44, -96, -64, -40, -84, -60, -52, -92, -56, -28, -116, -48, -12, -72, -48, -36, Byte.MIN_VALUE, -36, -4, -88, -44, -20, -100, -40, -8, -108, -36, -4, -96, -28, -4, -72, -36, -12, -76, -40, -4, -76, -20, -4, -56, -24, -4, -48, -12, -4, -36, -12, -4, -28, -4, -4, -16, -4, -4, 4, 4, 4, 8, 8, 8, 12, 12, 12, 12, 12, 16, 8, 16, 16, 16, 16, 16, 16, 24, 24, 32, 32, 32, 24, 32, 40, 40, 40, 40, 52, 64, 72, 80, 80, 80, 88, 108, 124, 116, 112, 112, 104, Byte.MIN_VALUE, -116, -116, -116, -116, 112, -116, -92, Byte.MIN_VALUE, -104, -84, -96, -96, -96, -84, -84, -84, -96, -80, -72, -72, -72, -72, -48, -48, -48, -52, -40, -36, -40, -36, -36, -36, -28, -24, -24, -20, -20, -4, -4, -4, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
     paramMap.put("Menu 2", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 4, 4, 12, 8, 8, 12, 0, 0, 20, 0, 12, 20, 0, 8, 32, 8, 20, 28, 0, 0, 36, 4, 16, 36, 0, 0, 44, 0, 32, 40, 0, 4, 60, 24, 40, 48, 8, 24, 64, 0, 20, 68, 28, 48, 56, 0, 32, 12, 0, 84, 28, 0, -120, 44, 0, -68, 64, 0, -16, 80, 12, 8, 4, 92, -116, -104, 100, -100, -84, 108, -88, -68, 116, -72, -52, Byte.MIN_VALUE, -60, -36, -116, -48, -16, -92, -28, -4, 16, 16, 16, 0, 24, 24, 36, 36, 36, 40, 40, 40, 44, 44, 44, 48, 48, 48, 52, 52, 52, 56, 56, 56, 60, 60, 60, 40, 64, 72, 64, 64, 64, 76, 76, 76, 52, 80, 92, 88, 88, 88, 64, 96, 104, 72, 112, 120, 104, 104, 104, 116, 116, 116, 84, Byte.MIN_VALUE, -120, -124, -124, -124, -108, -108, -108, -92, -92, -92, -72, -72, -72, -52, -52, -52, -32, -32, -32, -12, -12, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
   }
   private static void performMapCreate5(Map<String, RestrictableIndexColorModel> paramMap) {
     paramMap.put("Menu 3", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 0, 0, 4, 0, 4, 8, 4, 4, 8, 4, 8, 12, 8, 8, 12, 8, 12, 16, 0, 0, 28, 12, 20, 24, 12, 12, 40, 20, 20, 44, 0, 0, 56, 12, 20, 56, 32, 36, 64, 20, 28, 76, 40, 44, 72, 24, 36, 92, 44, 52, 80, 40, 64, 76, 44, 52, 92, 52, 60, 88, 48, 76, 92, 60, 68, 96, 44, 60, 120, 60, 80, 112, 60, 84, Byte.MIN_VALUE, 80, 92, 124, 64, 92, -112, 84, 100, -108, 76, -120, -80, 84, -72, -48, 0, 4, 0, 4, 8, 4, 8, 12, 8, 12, 16, 8, 120, -112, -76, Byte.MIN_VALUE, -92, -72, -116, -76, -56, -100, -72, -68, -96, -68, -60, -112, -60, -36, -80, -52, -44, -104, -44, -24, -68, -48, -44, 104, -24, -4, -64, -40, -36, -96, -32, -12, -60, -28, -20, -48, -28, -24, -100, -4, -4, -84, -12, -4, -36, -24, -24, -64, -4, -4, -36, -12, -8, -20, -4, -4, 0, 4, 4, 4, 4, 0, 4, 4, 4, 4, 8, 8, 8, 8, 4, 8, 8, 8, 12, 12, 8, 12, 12, 12, 12, 16, 12, 12, 12, 16, 16, 16, 8, 16, 16, 12, 12, 16, 16, 16, 16, 16, 16, 20, 12, 16, 20, 16, 20, 20, 12, 16, 20, 20, 20, 20, 16, 20, 20, 20, 20, 24, 16, 20, 24, 20, 24, 24, 16, 20, 24, 24, 24, 24, 24, 28, 28, 16, 24, 28, 24, 16, 28, 32, 24, 28, 28, 32, 32, 20, 28, 32, 28, 20, 32, 36, 28, 32, 32, 32, 36, 32, 32, 36, 36, 32, 40, 36, 36, 40, 36, 32, 40, 40, 36, 40, 40, 28, 40, 48, 36, 44, 40, 40, 44, 40, 36, 44, 44, 28, 44, 52, 40, 44, 44, 40, 48, 44, 44, 48, 44, 40, 48, 48, 44, 48, 48, 36, 48, 56, 44, 52, 48, 48, 52, 48, 44, 52, 52, 48, 52, 52, 40, 52, 60, 48, 56, 52, 36, 56, 64, 48, 56, 56, 52, 56, 56, 52, 60, 56, 52, 60, 60, 44, 60, 68, 56, 64, 60, 56, 64, 64, 56, 64, 68, 60, 68, 64, 48, 68, 76, 60, 68, 68, 60, 68, 72, 64, 72, 68, 60, 72, 72, 64, 72, 72, 52, 72, 84, 68, 76, 72, 64, 76, 76, 68, 76, 76, 68, 76, 80, 68, 80, 80, 72, 80, 80, 56, 80, 92, 72, 84, 80, 72, 84, 84, 76, 84, 84, 64, 88, 96, 76, 88, 88, 68, 80, 104, 80, 88, 88, 80, 92, 92, 60, 92, 108, 68, 92, 104, 84, 92, 92, 80, 92, 96, 76, 84, 108, 84, 96, 92, 84, 96, 96, 72, 96, 108, 84, 96, 100, 88, 100, 96, 84, 100, 100, 88, 100, 100, 76, 100, 112, 88, 100, 104, 92, 104, 100, 88, 104, 104, 92, 104, 104, 92, 104, 108, 96, 108, 104, 92, 108, 108, 80, 108, 120, 96, 108, 108, 88, 108, 116, 100, 112, 108, 96, 112, 112, 84, 112, 124, 100, 112, 112, 96, 112, 116, 100, 116, 116, 88, 116, Byte.MIN_VALUE, 108, 116, 112, 104, 120, 120, 92, 108, -116, 96, 120, Byte.MIN_VALUE, 108, 124, 124, 108, 124, Byte.MIN_VALUE, 100, 124, -120, 124, 124, 120, 112, Byte.MIN_VALUE, Byte.MIN_VALUE, 116, -124, -124, 112, -124, -120, 116, -124, -120, 108, -124, -112, 120, -120, -120, 108, Byte.MIN_VALUE, -100, 120, -120, -116, 120, -116, -116, 112, -116, -108, 124, -116, -116, 124, -116, -112, 124, -112, -112, 112, -124, -92, Byte.MIN_VALUE, -112, -112, 120, -112, -104, Byte.MIN_VALUE, -112, -108, Byte.MIN_VALUE, -108, -108, -124, -108, -108, Byte.MIN_VALUE, -108, -104, -124, -108, -104, -124, -104, -104, 124, -104, -96, -120, -104, -104, -124, -104, -100, -120, -100, -100, Byte.MIN_VALUE, -100, -92, -120, -100, -96, -116, -96, -96, -124, -96, -88, -116, -96, -92, -112, -92, -88, -108, -88, -84, -112, -84, -76, -96, -84, -84, -104, -80, -76, -92, -72, -72, -84, -64, -60, -72, -64, -64, -56, -48, -48, -44, -36, -36, -4, -4, -4, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
     paramMap.put("Menu 4", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 0, 0, 4, 0, 4, 8, 4, 4, 8, 0, 8, 12, 4, 8, 12, 0, 8, 16, 0, 0, 20, 4, 12, 16, 0, 12, 20, 4, 16, 20, 0, 4, 28, 4, 16, 24, 0, 16, 36, 4, 24, 36, 12, 28, 36, 4, 24, 48, 4, 32, 44, 0, 24, 60, 4, 36, 60, 20, 44, 52, 4, 44, 64, 4, 32, 72, 4, 36, 80, 8, 56, 76, 0, 60, 84, 16, 56, 88, 4, 44, 96, 8, 64, 92, 4, 48, 104, 24, 72, 96, 0, 44, 116, 0, 76, 108, 16, 68, 116, 4, 56, 124, 12, 84, 120, 0, 56, -116, 4, 64, -112, 0, 60, -100, 44, 88, -108, 0, 100, -108, 20, 88, -100, 4, 72, -88, 0, 72, -72, 52, 104, -88, 4, 84, -68, 24, 92, -72, 76, 112, -92, 0, 124, -76, 0, 80, -44, 4, 96, -44, 0, 84, -32, 0, -116, -60, 4, 100, -32, 44, 116, -40, 80, 124, -52, 4, 104, -20, 0, 96, -12, 0, 108, -4, 4, 124, -4, 88, -112, -28, Byte.MIN_VALUE, -100, -52, 36, -120, -4, 8, -112, -4, 60, -116, -4, 4, -64, -4, 0, 4, 0, 0, 8, 4, 4, 8, 4, 0, 12, 8, 4, 12, 8, 8, 12, 8, 4, 16, 8, 0, 20, 0, 4, 16, 12, 8, 16, 12, 4, 20, 16, 8, 20, 16, 4, 28, 0, 8, 24, 16, 12, 24, 16, 8, 24, 20, 12, 24, 20, 4, 36, 0, 12, 28, 20, 8, 28, 24, 16, 28, 20, 12, 28, 24, 16, 36, 0, 12, 32, 24, 16, 32, 24, 0, 44, 0, 16, 36, 24, 12, 36, 28, 16, 36, 28, 20, 40, 28, 16, 40, 32, 4, 56, 0, 20, 44, 32, 20, 44, 36, 0, 64, 0, 24, 48, 36, 28, 60, 0, 24, 52, 40, 0, 76, 0, 28, 56, 44, 36, 64, 44, 20, 84, 0, 36, 68, 52, 0, 96, 0, 64, 80, 0, 24, 104, 0, 44, 80, 60, 56, 96, 72, 16, -120, 0, 8, 4, 0, 16, 8, 0, 16, 12, 4, 24, 12, 0, 24, 16, 4, 32, 16, 0, 32, 20, 4, 40, 20, 0, 40, 28, 8, 48, 24, 0, 48, 36, 12, 56, 28, 0, 56, 36, 8, 64, 32, 0, 60, 44, 16, 68, 36, 4, 56, 48, 28, 64, 48, 24, 76, 40, 4, 76, 56, 24, 88, 48, 4, 96, 48, 0, 84, 64, 32, 104, 56, 4, 112, 56, 0, 96, 76, 40, 104, 76, 32, 120, 64, 4, 108, 84, 44, 116, 84, 36, -124, 68, 4, 124, 80, 20, 116, 92, 48, -116, 72, 4, 116, 96, 64, -104, 76, 4, -112, 96, 36, -100, 84, 16, -120, 104, 56, -92, 84, 4, -100, 116, 60, -84, 104, 36, -72, 100, 16, -64, 112, 32, -68, 116, 48, -80, 124, 72, -64, -120, 80, -76, -116, 100, -40, -120, 56, -40, -112, 72, -48, -104, 96, -32, -100, 92, -28, -92, 104, -28, -84, 116, -112, Byte.MIN_VALUE, 84, -64, -100, 124, 0, 4, 4, 4, 4, 0, 4, 4, 4, 0, 8, 8, 4, 8, 8, 8, 8, 4, 0, 12, 12, 4, 12, 12, 4, 16, 16, 8, 16, 16, 16, 16, 8, 12, 20, 16, 20, 20, 12, 8, 24, 24, 16, 28, 24, 28, 28, 16, 36, 36, 20, 44, 40, 20, 36, 44, 32, 44, 48, 32, 36, 52, 44, 52, 56, 40, 36, 56, 56, 60, 56, 36, 36, 64, 64, 56, 68, 52, 68, 64, 44, 56, 72, 64, 80, 72, 44, 68, 76, 56, 60, 80, 64, 44, 80, 80, 80, 76, 52, 64, 84, 76, 76, 84, 68, 84, 84, 64, 96, 88, 56, 40, 96, 104, 96, 92, 64, 76, 96, 84, 76, 104, 96, 104, 104, 76, 96, 116, 96, 64, 120, 116, 112, 116, 88, Byte.MIN_VALUE, 112, 72, 88, 104, -120, 112, -112, 120, -108, -120, 104, 108, Byte.MIN_VALUE, -92, -88, -108, Byte.MIN_VALUE, -64, -80, -100, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
     paramMap.put("Sky", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 4, 4, 8, 0, 4, 16, 4, 8, 24, 8, 16, 24, 16, 20, 28, 4, 12, 36, 12, 24, 32, 20, 24, 32, 8, 16, 44, 16, 28, 36, 12, 32, 40, 4, 8, 56, 16, 28, 48, 20, 40, 48, 12, 20, 64, 16, 40, 56, 4, 12, 72, 28, 40, 56, 12, 32, 76, 20, 44, 68, 32, 44, 64, 8, 16, 88, 32, 52, 72, 40, 52, 68, 28, 40, 84, 20, 28, 92, 8, 36, 92, 24, 56, 84, 36, 56, 84, 16, 24, 108, 16, 44, 104, 36, 68, 92, 24, 36, 112, 36, 60, 104, 12, 44, 124, 44, 76, 100, 8, 72, 112, 24, 40, Byte.MIN_VALUE, 40, 80, 116, 36, 48, -120, 64, 80, 108, 12, 52, -116, 104, 32, 112, 68, 88, 120, 64, 64, -116, 48, 92, -124, 36, 52, -100, 24, 40, -92, 20, 72, -92, 64, 100, -116, 56, 112, -116, 80, 104, -116, 52, 68, -80, 32, 76, -76, 88, 112, -104, 64, 120, -96, 28, 96, -68, 72, -124, -100, 84, 84, -60, 32, 108, -56, 88, 124, -84, 72, -120, -80, 84, 124, -56, 32, 112, -32, 84, -100, -72, 0, 44, -4, 112, -116, -64, 80, -104, -52, 48, -124, -28, 112, 112, -32, 120, -104, -48, 60, -120, -8, 56, -96, -20, 100, -72, -40, -124, -92, -32, 68, -76, -16, 76, -64, -12, -116, -80, -16, 92, -44, -4, -80, -80, -4, 16, 36, 4, 24, 36, 20, 24, 60, 32, 12, 72, 24, 48, 68, 0, 8, 100, 24, 36, 92, 36, 36, 92, 56, 68, 108, 8, 20, 124, 40, 52, 116, 64, 48, 120, 88, 28, -100, 52, 56, -124, 112, 52, -96, 72, 76, -112, 88, 40, -68, 68, 72, -104, -124, 76, -72, 96, 0, -4, 24, 92, -36, 116, 124, -48, -116, -120, -4, -96, 40, 12, 12, 72, 24, 24, 88, 0, 0, 68, 20, 56, 104, 36, 16, 100, 60, 40, 120, 40, 40, Byte.MIN_VALUE, 16, 76, -124, 76, 56, -108, 48, 48, -116, 96, 72, -96, 92, 56, -84, 80, 80, -84, 108, 76, -68, 120, 84, -40, 96, 36, -48, 120, 100, -32, -112, 100, -36, -96, Byte.MIN_VALUE, -4, 32, -92, -16, -124, -124, -4, -96, -96, -4, -72, -112, -112, -116, 88, -92, -96, 104, -60, -64, -124, -44, -48, -104, -4, -52, -88, -12, -12, -52, Byte.MIN_VALUE, -96, -64, -88, -64, -60, -108, -60, -32, 116, -24, -4, -80, -4, -60, -92, -28, -4, -60, -4, -4, 4, 4, 4, 8, 8, 8, 12, 12, 12, 16, 16, 16, 20, 20, 20, 24, 24, 24, 24, 28, 36, 32, 32, 32, 36, 36, 36, 40, 40, 40, 32, 40, 48, 48, 48, 48, 40, 48, 56, 52, 52, 52, 60, 56, 52, 52, 56, 68, 60, 60, 60, 48, 60, 76, 64, 64, 64, 60, 64, 68, 68, 68, 68, 60, 72, 80, 56, 68, 88, 76, 76, 76, 60, 76, 96, 92, 88, 52, 80, 80, 80, 84, 84, 84, 92, 92, 92, 80, 92, 104, 96, 96, 96, 116, 112, 68, 80, 100, 124, 104, 104, 104, 108, 108, 108, 96, 108, 120, 112, 112, 112, 116, 116, 116, 124, 124, 124, 100, Byte.MIN_VALUE, -108, 116, -124, -112, 112, -120, -84, -112, -112, -112, -124, -108, -100, -72, -108, Byte.MIN_VALUE, -96, -96, -96, -104, -84, -80, -84, -84, -84, -72, -72, -72, -52, -52, -52, -40, -40, -40, -4, -52, -52, -28, -28, -28, 16, 0, 0, 20, 0, 0, 24, 0, 0, 28, 0, 0, 32, 4, 0, 32, 12, 8, 40, 0, 0, 40, 4, 0, 44, 0, 0, 44, 8, 0, 44, 16, 4, 48, 0, 0, 48, 20, 12, 56, 8, 0, 52, 24, 16, 56, 20, 8, 60, 16, 4, 64, 20, 4, 60, 28, 20, 68, 24, 8, 64, 36, 24, 68, 32, 20, 72, 28, 16, 76, 36, 20, 72, 44, 32, 80, 40, 24, 80, 44, 28, 84, 48, 32, 80, 52, 40, 84, 56, 44, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
   }
   private static void performMapCreate6(Map<String, RestrictableIndexColorModel> paramMap) {
     paramMap.put("Static", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
     paramMap.put("Trademark", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 0, 0, 4, 0, 0, 8, 0, 0, 12, 0, 0, 16, 0, 0, 20, 4, 8, 20, 0, 0, 24, 0, 0, 28, 0, 0, 32, 8, 12, 32, 0, 4, 36, 0, 0, 40, 0, 4, 40, 0, 0, 44, 0, 4, 44, 0, 0, 48, 0, 4, 48, 12, 16, 44, 0, 0, 52, 0, 4, 52, 0, 0, 56, 0, 4, 56, 0, 8, 56, 4, 8, 56, 0, 0, 60, 0, 4, 60, 4, 8, 60, 16, 20, 56, 0, 36, 52, 0, 0, 64, 0, 4, 64, 4, 8, 64, 0, 0, 68, 4, 8, 68, 0, 0, 72, 0, 8, 72, 8, 32, 68, 0, 0, 76, 0, 4, 76, 20, 28, 68, 4, 12, 76, 0, 0, 80, 0, 12, 80, 8, 12, 80, 0, 0, 84, 4, 16, 84, 20, 24, 80, 0, 0, 88, 4, 8, 88, 8, 16, 88, 4, 20, 88, 12, 40, 84, 0, 0, 96, 8, 16, 96, 4, 24, 96, 0, 0, 100, 20, 36, 92, 0, 0, 104, 4, 8, 104, 0, 0, 108, 12, 20, 108, 0, 0, 112, 16, 40, 104, 4, 32, 108, 0, 0, 116, 0, 4, 116, 0, 16, 116, 28, 36, 108, 0, 0, 120, 4, 36, 116, 0, 0, 124, 16, 24, 124, 0, 0, Byte.MIN_VALUE, 8, 44, 120, 4, 20, Byte.MIN_VALUE, 16, 56, 116, 0, 0, -124, 4, 48, 124, 4, 40, Byte.MIN_VALUE, 28, 36, Byte.MIN_VALUE, 0, 0, -120, 0, 12, -120, 0, 24, -120, 8, 52, Byte.MIN_VALUE, 16, 28, -120, 0, 0, -116, 4, 44, -120, 4, 12, -112, 8, 56, -120, 4, 32, -112, 0, 0, -108, 0, 0, -104, 20, 32, -108, 8, 16, -104, 56, 64, Byte.MIN_VALUE, 0, 44, -108, 12, 64, -116, 0, 0, -100, 4, 52, -108, 0, 28, -100, 32, 52, -108, 0, 0, -92, 0, 4, -92, 0, 40, -96, 8, 64, -104, 0, 4, -88, 0, 52, -96, 24, 36, -92, 16, 76, -104, 0, 8, -84, 0, 64, -96, 88, 84, 124, 4, 56, -88, 44, 100, -116, 16, 60, -88, 16, 80, -96, 0, 8, -76, 0, 72, -88, 0, 16, -72, 8, 68, -84, 24, 44, -76, 24, 92, -92, 0, 80, -84, 0, 16, -64, 0, 24, -64, 8, 72, -76, 8, 52, -68, 16, 92, -84, 24, 100, -88, 0, 88, -76, 12, 84, -72, 4, 44, -56, 36, 108, -84, 20, 100, -76, 0, 96, -72, 88, 104, -96, 28, 108, -76, 16, 92, -64, 8, 64, -52, 0, 104, -68, 48, 120, -76, 24, 116, -68, 16, 100, -56, 36, 120, -68, 0, 116, -60, 44, 60, -36, 20, 124, -60, 4, 64, -32, 36, Byte.MIN_VALUE, -64, 24, 112, -52, 60, -120, -68, 16, 96, -36, 0, Byte.MIN_VALUE, -52, 52, -120, -60, 40, -120, -56, 20, -116, -48, 12, -120, -44, 44, -112, -52, 64, -112, -56, 32, -108, -44, 52, -104, -48, 12, Byte.MIN_VALUE, -24, 64, -104, -48, 28, -108, -36, 44, -104, -40, 44, Byte.MIN_VALUE, -24, 72, -100, -48, 60, -96, -44, 84, -96, -48, 40, -96, -32, 48, -92, -36, 76, -88, -40, 92, -88, -44, 60, -88, -32, 20, -100, -12, 96, -84, -40, 72, -84, -28, 88, -80, -36, 108, -84, -40, 48, -80, -20, 100, -76, -36, 84, -76, -28, 28, -76, -8, 112, -72, -36, 104, -72, -32, 52, -64, -12, 100, -68, -24, 112, -64, -28, 68, -64, -8, 80, -52, -4, 124, -52, -16, 108, -40, -4, -112, -88, -64, 120, -76, -40, -124, -72, -36, 124, -68, -32, 120, -60, -28, -116, -64, -32, -124, -60, -28, -108, -60, -32, -112, -56, -24, -100, -56, -28, -116, -52, -20, -104, -52, -24, -92, -48, -24, -100, -44, -20, -80, -48, -24, -120, -36, -8, -88, -44, -20, -80, -40, -20, -108, -32, -8, -72, -40, -20, -92, -28, -8, -64, -36, -20, -56, -32, -16, -76, -20, -4, -44, -28, -16, -52, -12, -4, -28, -20, -12, -24, -8, -4, 116, -120, -80, -88, -84, -64, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
     paramMap.put("Units", new RestrictableIndexColorModel(ImageUtilities.interpretIndexColorModel(new byte[] { 0, 0, 0, 0, 0, 36, 8, 24, 28, 16, 36, 44, 24, 52, 60, 0, 0, 92, 32, 64, 72, 40, 72, 84, 0, 0, -112, 16, 72, -116, 0, 0, -68, 32, -124, -48, 108, -60, -12, 80, 124, -116, 100, -100, -84, 8, 12, 12, 16, 16, 20, 28, 28, 28, 28, 36, 40, 44, 44, 44, 48, 56, 60, 56, 56, 56, 72, 72, 72, 72, 80, 88, 52, 88, 100, 88, 88, 88, 60, 100, 116, 100, 100, 100, 112, 116, 124, -124, -124, -124, -108, -104, -100, -60, -60, -60, -12, -12, -12, 4, 4, 8, 0, 4, 16, 4, 8, 24, 8, 16, 24, 16, 20, 28, 4, 12, 36, 12, 24, 32, 20, 24, 32, 8, 16, 44, 16, 28, 36, 12, 32, 40, 4, 8, 56, 16, 28, 48, 20, 40, 48, 12, 20, 64, 16, 40, 56, 4, 12, 72, 28, 40, 56, 12, 32, 76, 20, 44, 68, 32, 44, 64, 8, 16, 88, 32, 52, 72, 40, 52, 68, 28, 40, 84, 20, 28, 92, 8, 36, 92, 24, 56, 84, 36, 56, 84, 16, 24, 108, 16, 44, 104, 36, 68, 92, 24, 36, 112, 36, 60, 104, 12, 44, 124, 44, 76, 100, 8, 72, 112, 24, 40, Byte.MIN_VALUE, 40, 80, 116, 36, 48, -120, 64, 80, 108, 12, 52, -116, 104, 32, 112, 68, 88, 120, 64, 64, -116, 48, 92, -124, 36, 52, -100, 24, 40, -92, 20, 72, -92, 64, 100, -116, 56, 112, -116, 80, 104, -116, 52, 68, -80, 32, 76, -76, 88, 112, -104, 64, 120, -96, 28, 96, -68, 72, -124, -100, 84, 84, -60, 32, 108, -56, 88, 124, -84, 72, -120, -80, 84, 124, -56, 32, 112, -32, 84, -100, -72, 0, 44, -4, 112, -116, -64, 80, -104, -52, 48, -124, -28, 112, 112, -32, 120, -104, -48, 60, -120, -8, 56, -96, -20, 100, -72, -40, -124, -92, -32, 68, -76, -16, 76, -64, -12, -116, -80, -16, 92, -44, -4, -80, -80, -4, 16, 36, 4, 24, 36, 20, 24, 60, 32, 12, 72, 24, 48, 68, 0, 8, 100, 24, 36, 92, 36, 36, 92, 56, 68, 108, 8, 20, 124, 40, 52, 116, 64, 48, 120, 88, 28, -100, 52, 56, -124, 112, 52, -96, 72, 76, -112, 88, 40, -68, 68, 72, -104, -124, 76, -72, 96, 0, -4, 24, 92, -36, 116, 124, -48, -116, -120, -4, -96, 40, 12, 12, 72, 24, 24, 88, 0, 0, 68, 20, 56, 104, 36, 16, 100, 60, 40, 120, 40, 40, Byte.MIN_VALUE, 16, 76, -124, 76, 56, -108, 48, 48, -116, 96, 72, -96, 92, 56, -84, 80, 80, -84, 108, 76, -68, 120, 84, -40, 96, 36, -48, 120, 100, -32, -112, 100, -36, -96, Byte.MIN_VALUE, -4, 32, -92, -16, -124, -124, -4, -96, -96, -4, -72, -112, -112, -116, 88, -92, -96, 104, -60, -64, -124, -44, -48, -104, -4, -52, -88, -12, -12, -52, Byte.MIN_VALUE, -96, -64, -88, -64, -60, -108, -60, -32, 116, -24, -4, -80, -4, -60, -92, -28, -4, -60, -4, -4, 4, 4, 4, 8, 8, 8, 12, 12, 12, 16, 16, 16, 20, 20, 20, 24, 24, 24, 24, 28, 36, 32, 32, 32, 36, 36, 36, 40, 40, 40, 32, 40, 48, 48, 48, 48, 40, 48, 56, 52, 52, 52, 60, 56, 52, 52, 56, 68, 60, 60, 60, 48, 60, 76, 64, 64, 64, 60, 64, 68, 68, 68, 68, 60, 72, 80, 56, 68, 88, 76, 76, 76, 60, 76, 96, 92, 88, 52, 80, 80, 80, 84, 84, 84, 92, 92, 92, 80, 92, 104, 96, 96, 96, 116, 112, 68, 80, 100, 124, 104, 104, 104, 108, 108, 108, 96, 108, 120, 112, 112, 112, 116, 116, 116, 124, 124, 124, 100, Byte.MIN_VALUE, -108, 116, -124, -112, 112, -120, -84, -112, -112, -112, -124, -108, -100, -72, -108, Byte.MIN_VALUE, -96, -96, -96, -104, -84, -80, -84, -84, -84, -72, -72, -72, -52, -52, -52, -40, -40, -40, -4, -52, -52, -28, -28, -28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1 }, PaletteDataInterpretation.BGR)));
   }
   static {
     HashMap<Object, Object> hashMap = new HashMap<Object, Object>();
     performMapCreate1((Map)hashMap);
     performMapCreate2((Map)hashMap);
     performMapCreate3((Map)hashMap);
     performMapCreate4((Map)hashMap);
     performMapCreate5((Map)hashMap);
     performMapCreate6((Map)hashMap);
     IndexColorModel[] arrayOfIndexColorModel = { (IndexColorModel)hashMap.get("Act 1"), (IndexColorModel)hashMap.get("Act 2"), (IndexColorModel)hashMap.get("Act 3"), (IndexColorModel)hashMap.get("Act 4"), (IndexColorModel)hashMap.get("Act 5") };
     int i = Integer.MAX_VALUE;
     for (IndexColorModel indexColorModel : arrayOfIndexColorModel)
     {
       i = Math.min(i, indexColorModel.getMapSize());
     }
     byte[] arrayOfByte1 = new byte[i];
     byte[] arrayOfByte2 = new byte[i];
     byte[] arrayOfByte3 = new byte[i];
     ArrayList<Integer> arrayList = new ArrayList();
     for (byte b1 = 0; b1 < i; b1++) {
       boolean bool = true;
       for (byte b = 0; b < arrayOfIndexColorModel.length - 1; b++) {
         if (arrayOfIndexColorModel[b].getRGB(b1) != arrayOfIndexColorModel[b + 1].getRGB(b1)) {
           bool = false;
           break;
         } 
       } 
       if (bool) {
         arrayOfByte1[b1] = (byte)arrayOfIndexColorModel[0].getRed(b1);
         arrayOfByte2[b1] = (byte)arrayOfIndexColorModel[0].getGreen(b1);
         arrayOfByte3[b1] = (byte)arrayOfIndexColorModel[0].getBlue(b1);
       } else {
         arrayOfByte1[b1] = 0;
         arrayOfByte2[b1] = 0;
         arrayOfByte3[b1] = 0;
         arrayList.add(Integer.valueOf(b1));
       } 
     } 
     int[] arrayOfInt = new int[arrayList.size()];
     for (byte b2 = 0; b2 < arrayOfInt.length; ) { arrayOfInt[b2] = ((Integer)arrayList.get(b2)).intValue(); b2++; }
      hashMap.put("Act 0", (new RestrictableIndexColorModel(8, i, arrayOfByte1, arrayOfByte2, arrayOfByte3)).deriveWithInvalidIndices(arrayOfInt));
     PALETTE_MAP = Collections.unmodifiableMap(hashMap);
   }
 }